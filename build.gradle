plugins {
    id 'org.jetbrains.intellij' version '1.8.0' //1.8.0?
    id 'java'
    id "de.undercouch.download" version "5.1.2"
}

group 'org.dochub.idea'
version '1.19.3-beta'

sourceSets.main.java.srcDirs 'src/main/gen'

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes("PLANTUML_LIMIT_SIZE": "24384")
    }
}

processResources {
    exclude('html/*.zip')
}

task downloadZipFile(type: Download) {
    src 'https://github.com/agaydenger/DocHub/releases/download/v1.0-alpha/plugin.zip'
    dest new File('src/main/resources/html/plugin.zip')
    onlyIfModified true
}

task downloadAndUnzipFile(dependsOn: downloadZipFile, type: Copy) {
    from zipTree(downloadZipFile.dest)
    into new File('src/main/resources/html/')
}

dependencies {
    implementation 'com.ibm.jsonata4java:JSONata4Java:1.6.1'
    // implementation files('jars/elk-full.jar')
    implementation files('jars/plantuml.jar')
    // implementation 'net.sourceforge.plantuml'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2022.2.1'
    plugins = ['yaml', 'com.intellij.java']
}

patchPluginXml {
    changeNotes = """
      Bata version of DocHub Plugin<br>
      <em>
          <ul>
            <li>DocHub core: v2.2.2;</li>
            <li>Suggests for the structure of architecture manifests (yaml);</li>
            <li>Suggests for the values of manifest fields;</li>
            <li>Fast navigation through manifests;</li>
            <li>Problems highlighting;</li>
            <li>JSONata file support;</li>
            <li>Mapping architecture on the code;</li>
            <li>Added the datasets and the table documents support;</li>
            <li>(new) Refactored subsystem of metamodel validation;</li>
            <li>(new) Document templates.</li>
          <ul>  
      </em>
      """
    sinceBuild = "212"
    untilBuild = "222.*"
}
test {
    useJUnitPlatform()
}